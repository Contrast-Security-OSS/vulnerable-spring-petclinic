server.port=8081


logging.level.org.springframework=DEBUG
logging.level.root=DEBUG 
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true
# Actuator
management.endpoints.web.exposure.include=*
management.endpoint.env.post.enabled=true
management.endpoint.restart.enabled=true

# H2 Database
#database=h2
#spring.datasource.petclinic.url=jdbc:h2:mem:petclinic
#spring.datasource.petclinic.username=

# database init, supports mysql too
database=mysql
spring.datasource.petclinic.url=${MYSQL_URL:jdbc:mysql://db-1:3306/petclinic}
spring.datasource.petclinic.username=${MYSQL_USER:petclinic}
spring.datasource.petclinic.password=${MYSQL_USER:petclinic}

spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

# SQL is written to be idempotent so this is safe
spring.sql.init.mode=always


# We have two separate datasources and have to feed them different schema an data files for init.
# So the general springboot config directives won't work well for us.  The initialization
# occurs in code via the DataSourceInitializer bean. The paths are are assumed to be relative
# from the classpath.
spring.datasource.petclinic.schema-locations=db/${database}/schema.sql
spring.datasource.petclinic.data-locations=db/${database}/data.sql
spring.datasource.pii.schema-locations=db/${database}/schema-pii.sql
spring.datasource.pii.data-locations=db/${database}/data-pii.sql
